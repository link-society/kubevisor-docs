<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Oriented on Kubirds</title><link>https://kubirds.com/docs/dockerized-supervision/data/</link><description>Recent content in Data Oriented on Kubirds</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubirds.com/docs/dockerized-supervision/data/index.xml" rel="self" type="application/rss+xml"/><item><title>Persistent Volume</title><link>https://kubirds.com/docs/dockerized-supervision/data/volume/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubirds.com/docs/dockerized-supervision/data/volume/</guid><description>Use Case &amp;#8592; Consider reading first Data Oriented You have a Docker image example/test-suite:latest providing a command run-test-suite.
The command produce a JUnit report to /tmp/report.xml.
You have a webhook accepting JUnit reports for further business logic.
How-To First, create a persistent volume to store your report:
--- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: my-testsuite-workspace-pvc namespace: default spec: storageClassName: default accessModes: - ReadWriteOnce - ReadOnly resources: requests: storage: 10Mi Then mount the volume on your unit:</description></item><item><title>Data Access</title><link>https://kubirds.com/docs/dockerized-supervision/data/access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubirds.com/docs/dockerized-supervision/data/access/</guid><description>Introduction &amp;#8592; Consider reading first Persistent Volume In the previous example, we created a strong coupling between the unit and its reactor.
Because they reference the same persistent volume, the reactor cannot be used with another unit.
Reactors should access the persistent volume in ReadOnly access mode, while units should access it in ReadWriteOnce access mode (preventing parallel writes).
Use Case You have a unit predict performing predictions based on a ML model.</description></item></channel></rss>